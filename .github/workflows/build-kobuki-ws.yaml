name: Build Docker Image for kobuki-ws

on:
  workflow_run:
    workflows: ["Build Docker Image for template-ws"]
    types: [completed]

jobs:
  paths-filter:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # Required to fix compilation error.
    # Ref: https://github.com/j3soon/ros2-essentials/issues/72
    runs-on: ubuntu-22.04
    outputs:
      results: ${{ steps.filter.outputs.results }}
    steps:
    # Ref: https://github.com/dorny/paths-filter/issues/147#issuecomment-1287800590
    - name: Download a single artifact
      uses: dawidd6/action-download-artifact@v7
      with:
        workflow: build-template-ws.yaml
        name: original-refs
        workflow_conclusion: success
    - name: set REF_BASE to env
      run: |
        echo "BASE=$(cat base.txt)" >> $GITHUB_ENV
        echo "CURRENT_BRANCH=$(cat current-branch.txt)" >> $GITHUB_ENV
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ env.BASE }}
        ref: ${{ env.CURRENT_BRANCH }}
        filters: |
          results:
            - .github/workflows/build-kobuki-ws.yaml
            - kobuki_ws/docker/Dockerfile
            - kobuki_ws/docker/.dockerignore
            - kobuki_ws/docker/.bashrc
            - kobuki_ws/docker/kobuki_driver_ws/**
            - kobuki_ws/docker/udev_rules/**
    - name: Changes matched
      if: steps.filter.outputs.results == 'true'
      run: echo "Changes matched, will build image"
    - name: Changes didn't match
      if: steps.filter.outputs.results != 'true'
      run: echo "Changes didn't match, will NOT build image"
  docker:
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.results == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          build-mount-path: /var/lib/docker/
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - name: Restart docker
        run: sudo service docker restart
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - # Ref: https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-a-registry-using-a-personal-access-token
        name: Prepare tag name as environment variable
        run: |
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          # Output the environment variable
          # Ref: https://stackoverflow.com/a/57989070
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # Print for debugging purpose
          echo "VERSION=$VERSION"
      - name: Docker meta
        id: meta
        # Ref: https://github.com/docker/metadata-action
        uses: docker/metadata-action@v5
        with:
          # Link: https://hub.docker.com/repository/docker/j3soon/ros2-kobuki-ws/tags
          images: j3soon/ros2-kobuki-ws
          tags: |
            type=raw,value={{date 'YYYYMMDD'}}
            type=raw,value=${{ env.VERSION }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: j3soon
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull j3soon/ros2-template-ws (amd64)
        run: docker pull --platform linux/amd64 j3soon/ros2-template-ws
      - name: Pull j3soon/ros2-template-ws (arm64)
        run: docker pull --platform linux/arm64 j3soon/ros2-template-ws
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: kobuki_ws/docker
          cache-from: |
            j3soon/ros2-template-ws:buildcache-amd64
            j3soon/ros2-template-ws:buildcache-arm64
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
      - name: Push amd64 cache
        uses: docker/build-push-action@v6
        with:
          context: kobuki_ws/docker
          cache-from: |
            j3soon/ros2-template-ws:buildcache-amd64
            j3soon/ros2-template-ws:buildcache-arm64
          cache-to: type=registry,ref=j3soon/ros2-kobuki-ws:buildcache-amd64,mode=max
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
      - name: Push arm64 cache
        uses: docker/build-push-action@v6
        with:
          context: kobuki_ws/docker
          cache-from: |
            j3soon/ros2-template-ws:buildcache-amd64
            j3soon/ros2-template-ws:buildcache-arm64
          cache-to: type=registry,ref=j3soon/ros2-kobuki-ws:buildcache-arm64,mode=max
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
      - name: Push image
        uses: docker/build-push-action@v6
        with:
          context: kobuki_ws/docker
          cache-from: |
            j3soon/ros2-template-ws:buildcache-amd64
            j3soon/ros2-template-ws:buildcache-arm64
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
